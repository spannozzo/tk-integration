# Configuration file
# key = value

#quarkus.http.port=8087
#test.quarkus.http.test-port=8888


#handled at container level
#quarkus.http.ssl.certificate.file=META-INF/resources/cert.pem
#quarkus.http.ssl.certificate.key-file=META-INF/resources/key.pem
#quarkus.http.ssl-port=8445


mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
mp.jwt.verify.issuer=https://quarkus.io/using-jwt-rbac
mp.jwt.verify.upn=spannozzo@acme.jwt

jwt.service-auth-port=8088



#kubernetes dosn't accept properties with slash, so I will expose auth.url property instead of original property
auth.url=http://localhost:${jwt.service-auth-port}/accesstoken
org.acme.restclient.AuthRestClient/mp-rest/url=${auth.url}
org.acme.restclient.AuthRestClient/mp-rest/scope=javax.enterprise.context.Dependent

jwt.service-fu-port=8082

#kubernetes dosn't accept properties with slash, so I will expose auth.url property instead of original property
fu.url=http://localhost:${jwt.service-fu-port}/ 
org.acme.restclient.FuRestClient/mp-rest/url=${fu.url}
org.acme.restclient.FuRestClient/mp-rest/scope=javax.enterprise.context.Dependent

tk.service.url=ZXMlRynfFqd0TQsiJSvpk2iyzT+gz/l9DPqy8qRaBvKvvxztTJPXMBYyw+6JY18tswvuaDfodiXHxgFJ4lsMcMa42oZDjpDqqRjzhhPbwp2SOWyGFOCr

mp.openapi.extensions.smallrye.openapi=3.0.2
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD
quarkus.swagger-ui.path=/swagger-ui-custom

quarkus.hibernate-validator.fail-fast=true

test-file=META-INF/resources/cvs/petra.doc

%test.tk-integration-logs=./tk-integration-logs/
%test.cv-store-folder=./stored-cvs/


#need to encrypt TK external service credentials
acme.jwt.enctypted-key=929A92C1C22F0C99BB21992D1BD3417433BE8CD07A309A4822B403FADD5AC92F


encrypted.tk.account=LXQ+QiiGXOpoQTUxKTb6JTuAImCrG04OhR4hebQL8A==
encrypted.tk.user=fmY9QTuRVvpi8JL53Jux6aaatolyVyL/gQ==
encrypted.tk.password=MTALCircd7XK0xC1fq23xpOAk0J3D8bG

quarkus.native.additional-build-args=--enable-http,--enable-https




