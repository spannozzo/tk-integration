apiVersion: v1
kind: Namespace
metadata:
  name: tk-integration-ns
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: tk-integration-auth
  name: tk-integration-auth
  namespace: tk-integration-ns
spec:
  ports:
  - name: "8088"
    port: 8088
    targetPort: 8088
  selector:
    io.kompose.service: tk-integration-auth
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: tk-integration-fu
    app: tk-integration-fu
  name: tk-integration-fu
  namespace: tk-integration-ns
spec:
  ports:
  - name: "8082"
    port: 8082
    targetPort: 8082
  selector:
    io.kompose.service: tk-integration-fu
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: tk-integration-main
  name: tk-integration-main
  namespace: tk-integration-ns
spec:
  ports:
  - name: "8443"
    port: 8443
    targetPort: 8443
  selector:
    io.kompose.service: tk-integration-main
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: tk-integration-auth
  name: tk-integration-auth
  namespace: tk-integration-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: tk-integration-auth
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/tk-integration-network: "true"
        io.kompose.service: tk-integration-auth
    spec:
      containers:
      - env:
        - name: mp.jwt.verify.publickey.location
          value: /META-INF/resources/publickey.pem
        - name: quarkus.http.port
          value: "8088"
        - name: smallrye.jwt.sign.key-location
          value: /META-INF/resources/privatekey.pem
        image: spannozzo/tk-integration-auth-native:latest
        imagePullPolicy: ""
        name: tk-integration-auth
        ports:
        - containerPort: 8088
        # - containerPort: 8443
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  name: tk-integration-fu
  labels:
    io.kompose.service: tk-integration-fu
  namespace: tk-integration-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: tk-integration-fu
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/tk-integration-network: "true"
        io.kompose.service: tk-integration-fu
    spec:
      volumes:
      - name: stored-cv-folder
        persistentVolumeClaim:
          claimName: stored-cv-folder
      containers:
      - env:
        - name: cv-store-folder
          value: /stored-cv
        - name: mp.jwt.verify.publickey.location
          value: /META-INF/resources/publickey.pem
        - name: "auth.url"
          value: http://tk-integration-auth:8088/accesstoken
        - name: quarkus.http.port
          value: "8082"
        - name: smallrye.jwt.sign.key-location
          value: /META-INF/resources/privatekey.pem
        image: spannozzo/tk-integration-fu-native:latest
        imagePullPolicy: ""
        name: tk-integration-fu
        ports:
        - containerPort: 8082
        volumeMounts:
        - name: stored-cv-folder
          mountPath: "/stored-cv"
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: tk-integration-main
  name: tk-integration-main
  namespace: tk-integration-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: tk-integration-main
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/tk-integration-network: "true"
        io.kompose.service: tk-integration-main
    spec:
      containers:
      - env:
        - name: mp.jwt.verify.publickey.location
          value: /META-INF/resources/publickey.pem
        - name: "auth.url"
          value: http://tk-integration-auth:8088/accesstoken
        - name: "fu.url"
          value: http://tk-integration-fu:8082/
        - name: quarkus.http.port
          value: "8080"
        - name: quarkus.http.ssl-port
          value: "8443"
        - name: quarkus.http.ssl.certificate.file
          value: META-INF/resources/cert.pem
        - name: quarkus.http.ssl.certificate.key-file
          value: META-INF/resources/key.pem
        - name: smallrye.jwt.sign.key-location
          value: /META-INF/resources/privatekey.pem
        image: spannozzo/tk-integration-main-native:latest
        imagePullPolicy: ""
        name: tk-integration-main
        ports:
        - containerPort: 8443
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stored-cv-folder
  namespace: tk-integration-ns
  labels:
    io.kompose.service: tk-integration-fu
    io.kompose.network/tk-integration-network: "true"
spec:
  accessModes:
  - ReadWriteOnce 
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  namespace: tk-integration-ns
  labels:
    type: local
    io.kompose.service: tk-integration-fu
    io.kompose.network/tk-integration-network: "true"
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: tk-integration-network
  namespace: tk-integration-ns
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          io.kompose.network/tk-integration-network: "true"
  podSelector:
    matchLabels:
      io.kompose.network/tk-integration-network: "true"